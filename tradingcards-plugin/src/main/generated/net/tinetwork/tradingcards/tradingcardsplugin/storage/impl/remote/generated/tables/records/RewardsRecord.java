/*
 * This file is generated by jOOQ.
 */
package net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.records;


import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.Rewards;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RewardsRecord extends UpdatableRecordImpl<RewardsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>{prefix}rewards.rarity_id</code>.
     */
    public void setRarityId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>{prefix}rewards.rarity_id</code>.
     */
    public String getRarityId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>{prefix}rewards.command</code>.
     */
    public void setCommand(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>{prefix}rewards.command</code>.
     */
    public String getCommand() {
        return (String) get(1);
    }

    /**
     * Setter for <code>{prefix}rewards.command_order</code>.
     */
    public void setCommandOrder(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>{prefix}rewards.command_order</code>.
     */
    public Integer getCommandOrder() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RewardsRecord
     */
    public RewardsRecord() {
        super(Rewards.REWARDS);
    }

    /**
     * Create a detached, initialised RewardsRecord
     */
    public RewardsRecord(String rarityId, String command, Integer commandOrder) {
        super(Rewards.REWARDS);

        setRarityId(rarityId);
        setCommand(command);
        setCommandOrder(commandOrder);
        resetTouchedOnNotNull();
    }
}
