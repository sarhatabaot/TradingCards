/*
 * This file is generated by jOOQ.
 */
package net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated;


import java.util.Arrays;
import java.util.List;

import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.Cards;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.CustomTypes;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.Decks;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.Packs;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.PacksContent;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.PacksTrade;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.Rarities;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.Rewards;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.Series;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.SeriesColors;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.Upgrades;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.UpgradesRequired;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.UpgradesResult;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.DSL;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>DEFAULT_SCHEMA</code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>{prefix}cards</code>.
     */
    public final Cards CARDS = Cards.CARDS;

    /**
     * The table <code>{prefix}custom_types</code>.
     */
    public final CustomTypes CUSTOM_TYPES = CustomTypes.CUSTOM_TYPES;

    /**
     * The table <code>{prefix}decks</code>.
     */
    public final Decks DECKS = Decks.DECKS;

    /**
     * The table <code>{prefix}packs</code>.
     */
    public final Packs PACKS = Packs.PACKS;

    /**
     * The table <code>{prefix}packs_content</code>.
     */
    public final PacksContent PACKS_CONTENT = PacksContent.PACKS_CONTENT;

    /**
     * The table <code>{prefix}packs_trade</code>.
     */
    public final PacksTrade PACKS_TRADE = PacksTrade.PACKS_TRADE;

    /**
     * The table <code>{prefix}rarities</code>.
     */
    public final Rarities RARITIES = Rarities.RARITIES;

    /**
     * The table <code>{prefix}rewards</code>.
     */
    public final Rewards REWARDS = Rewards.REWARDS;

    /**
     * The table <code>{prefix}series</code>.
     */
    public final Series SERIES = Series.SERIES;

    /**
     * The table <code>{prefix}series_colors</code>.
     */
    public final SeriesColors SERIES_COLORS = SeriesColors.SERIES_COLORS;

    /**
     * The table <code>{prefix}upgrades</code>.
     */
    public final Upgrades UPGRADES = Upgrades.UPGRADES;

    /**
     * The table <code>{prefix}upgrades_required</code>.
     */
    public final UpgradesRequired UPGRADES_REQUIRED = UpgradesRequired.UPGRADES_REQUIRED;

    /**
     * The table <code>{prefix}upgrades_result</code>.
     */
    public final UpgradesResult UPGRADES_RESULT = UpgradesResult.UPGRADES_RESULT;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super(DSL.name(""), null, DSL.comment(""));
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Cards.CARDS,
            CustomTypes.CUSTOM_TYPES,
            Decks.DECKS,
            Packs.PACKS,
            PacksContent.PACKS_CONTENT,
            PacksTrade.PACKS_TRADE,
            Rarities.RARITIES,
            Rewards.REWARDS,
            Series.SERIES,
            SeriesColors.SERIES_COLORS,
            Upgrades.UPGRADES,
            UpgradesRequired.UPGRADES_REQUIRED,
            UpgradesResult.UPGRADES_RESULT
        );
    }
}
